name: dependabot auto-merge

permissions:
  contents: write
  pull-requests: write

on: pull_request

jobs:
  dependabot:
    runs-on: ubuntu-24.04
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Enable auto-merge for Dependabot PRs
        run: |
          gh pr checkout "$PR_NUMBER"

          for retry in $(seq 180 -1 0); do
            if [ "$retry" = "0" ]; then
              echo Timeout
              cat statusCheckRollup.json || true
              cat checkRuns.json || true
              exit 1
            fi

            sleep 60

            gh pr status --json statusCheckRollup --jq . > statusCheckRollup.json
            jq '.currentBranch.statusCheckRollup[] | select(.workflowName != $ENV.GITHUB_WORKFLOW)' statusCheckRollup.json > checkRuns.json
            if [ "$(jq .status checkRuns.json | uniq)" != '"COMPLETED"' ]; then
              continue
            elif [ "$(jq .conclusion checkRuns.json | uniq)" != '"SUCCESS"' ]; then
              echo Skip
              exit 0
            fi
            break
          done

          set -x

          git fetch
          current_hash=$(git rev-parse HEAD)
          base_ref_name=$(gh pr status --json baseRefName --jq .currentBranch.baseRefName)
          origin_base_ref_name="origin/$base_ref_name"
          if ! git rev-parse "$origin_base_ref_name"; then
            exit 1
          fi
          if ! git merge --ff-only "$origin_base_ref_name"; then
            gh pr comment --body "@dependabot rebase"
            exit 0
          fi

          git reset --hard "$current_hash"

          for retry in $(seq 10); do
            if gh pr merge --auto --merge "$PR_URL"; then
              exit 0
            fi
            sleep 180
          done

          echo Error
          exit 1
        env:
          WORKFLOW_NAME: ${{github.workflow}}
          PR_URL: ${{github.event.pull_request.html_url}}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
