# SPDX-License-Identifier: MIT OR GPL-3.0-or-later
name: lint

permissions: {}

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  push:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Install deb packages
        run: sudo ./tools/install_ubuntu_packages.sh
      - uses: denoland/setup-deno@v2
        with:
          deno-version-file: .dvmrc
      - name: Disable git config core.quotepath
        run: git config core.quotepath off
      - name: Check file permissions
        run: |
          git ls-files ':!tools/*.sh' ':!tools/*.py' ':!tests/resources' ':!typings' | while read -r f; do
            echo "$f"
            if [ -x "$f" ]; then
              echo "$f has unnecessary executable permission."
              exit 1
            fi
          done
          git ls-files 'tools/*.sh' 'tools/*.py' | while read -r f; do
            echo "$f"
            if [ ! -x "$f" ]; then
              echo "$f has no executable permission."
              exit 1
            fi
          done
      - name: Install UV
        run: |
          curl --fail --show-error --location https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
      - name: Install UV dependencies
        run: |
          for _ in $(seq 5); do
            if uv sync; then
              break
            fi
          done
      - name: Check source code formatting
        run: |
          ./tools/format.sh
          git diff --exit-code
      - name: Check property type annotations
        run: |
          uv run python tools/property_typing.py > property_typing.log
          ./tools/format.sh
          git diff --exit-code
      - name: Install hadolint
        run: ./tools/install_hadolint.sh
      - name: Lint
        run: ./tools/lint.sh
      - name: Check VRM Validator works correctly
        run: |
          for failure_vrm_path in failure.vrm tests/failure.vrm; do
            touch "$failure_vrm_path"
            if ./tools/lint.sh; then
              echo "VRM Validator doesn't work correctly"
              exit 1
            fi
            rm "$failure_vrm_path"
          done

  super-linter:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # for super-linter
      - name: Super-Linter
        run: ./tools/super-linter.sh

  docs:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: denoland/setup-deno@v2
        with:
          deno-version-file: .dvmrc
      - name: Build
        run: deno task docs:build
