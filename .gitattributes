* -text
*.bat text eol=crlf
*.cs text eol=lf
*.css text eol=lf
*.cjs text eol=lf
*.cts text eol=lf
*.dockerfile text eol=lf
*.glsl text eol=lf
*.ini text eol=lf
*.js text eol=lf
*.json text eol=lf
*.json5 text eol=lf
*.jsonc text eol=lf
*.md text eol=lf
*.py text eol=lf
*.pyi text eol=lf
*.rb text eol=lf
*.toml text eol=lf
*.ts text eol=lf
*.txt text eol=lf
*.html text eol=lf
*.yaml text eol=lf
*.yml text eol=lf
.* text eol=lf
Dockerfile text eol=lf
deno.lock text eol=lf
uv.lock text eol=lf

/tests/resources/unity/**/*.asset text eol=lf
/tests/resources/unity/**/*.inputactions text eol=lf
/tests/resources/unity/**/*.meta text eol=lf
/tests/resources/unity/**/*.unity text eol=lf
/tests/resources/unity/**/*.asmdef text eol=lf
/tests/resources/unity/**/csc.rsp text eol=lf
/tests/resources/unity/**/Directory.Build.props text eol=crlf

# In the past, we used to treat files downloaded from GitHub's "Code" -> "Download ZIP" as add-ons, but this method is now deprecated.
# However, many users still download using this old deprecated method, resulting in numerous reports that the add-on doesn't work properly.
# We've implemented measures for the README branch that users view by default, but not for other branches like main.
# To minimize confusion on branches without countermeasures, when archiving, we exclude all source code and include only Notice.txt to guide users to the correct download location.
* export-ignore
/Notice.txt -export-ignore
